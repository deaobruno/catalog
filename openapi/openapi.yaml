openapi: 3.0.0

info:
  title: Catalog API
  description: Node.js Catalog RESTful API
  version: 1.0.0

servers:
  - url: http://localhost:8081
    description: Auth server
  - url: http://localhost:8082
    description: Users server
  - url: http://localhost:8083
    description: Products server

tags:
  - name: Authentication
  - name: Users
  - name: Products

paths:
  /auth/login:
    post:
      tags: 
        - Authentication
      description: Generates authentication tokens
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Tokens generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    description: Access Token
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzEsImV4cCI6MTYyMjkyNTU3MX0.0I5gFrVjyUjdgg_NkMwdwk6ZHux4n8JLqgia1CERrbM
                  refreshToken:
                    description: Refresh Token
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzF9._-5EiwijyMU1y49adL1hRTOgQx-xipBdnun2Fym3VWw
                required:
                  - accessToken
                  - refreshToken
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/register:
    post:
      tags: 
        - Authentication
      description: Regists user information
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        "200":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: User ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  name:
                    description: User name
                    type: string
                    example: Client User
                  email:
                    description: User email
                    type: string
                    example: user@email.com
                required:
                  - _id
                  - name
                  - email
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/refresh/{refreshToken}:
    get:
      tags: 
        - Authentication
      description: Generates new Access Token
      operationId: refresh
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  description: Refresh Token
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzF9._-5EiwijyMU1y49adL1hRTOgQx-xipBdnun2Fym3VWw
              required:
                - refreshToken
      responses:
        "200":
          description: New Access Token Generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    description: Access Token
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzEsImV4cCI6MTYyMjkyNTU3MX0.0I5gFrVjyUjdgg_NkMwdwk6ZHux4n8JLqgia1CERrbM
                  refreshToken:
                    description: Refresh Token
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzF9._-5EiwijyMU1y49adL1hRTOgQx-xipBdnun2Fym3VWw
                required:
                  - accessToken
                  - refreshToken
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/logout:
    get:
      tags: 
        - Authentication
      description: Revoke user access
      operationId: logout
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /validateToken:
    get:
      tags: 
        - Authentication
      description: Search users
      operationId: validateToken
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
      responses:
        "200":
          description: OK
  
  /isAdmin:
    get:
      tags: 
        - Authentication
      description: Search users
      operationId: isAdmin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAdmin:
                    description: Is user admin?
                    type: boolean
                    example: true
                required:
                  - isAdmin
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Response"

  /users:
    post:
      tags: 
        - Users
      description: Creates a new user
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: User name
                  type: string
                  example: Client User
                email:
                  description: User email
                  type: string
                  example: user@email.com
                role:
                  description: User role
                  type: string
                  example: client
                password:
                  description: User password
                  type: string
                  example: "12345"
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: User ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  name:
                    description: User name
                    type: string
                    example: Client User
                  email:
                    description: User email
                    type: string
                    example: user@email.com
                required:
                  - _id
                  - name
                  - email
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags: 
        - Users
      description: Search users
      operationId: find
      parameters:
        - name: name
          description: User name
          in: query
          schema:
            type: string
            example: Client User
        - name: email
          description: User email
          in: query
          schema:
            type: string
            example: user@email.com
        - name: role
          description: User role
          in: query
          schema:
            type: string
            example: client
        - name: page
          description: Pagination page (0 index based)
          in: query
          schema:
            type: number
            example: 0
        - name: limit
          description: Pagination limit
          in: query
          schema:
            type: number
            example: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    description: Current page (0 index based)
                    type: number
                    example: 0
                  pages:
                    description: Number of pages
                    type: number
                    example: 1
                  limit:
                    description: Results per page
                    type: number
                    example: 10
                  total:
                    description: Results total
                    type: number
                    example: 2
                  items:
                    description: Users list
                    type: string
                    example: "[{id: 60cca2f23c16d1184c6602e7, name: 'Client User', email: 'user@email.com', profile: 'client'}, {id: 1622928299859, name: 'Admin User', email: 'admin@email.com', profile: 'admin'}]"
                required:
                  - page
                  - pages
                  - limit
                  - total
                  - items
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{id}:
    get:
      tags: 
        - Users
      description: Shows user information
      operationId: findOne
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: User ID
          in: path
          required: true
          schema:
            type: integer
            example: 60cca2f23c16d1184c6602e7
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: User ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  name:
                    description: User name
                    type: string
                    example: Client User
                  email:
                    description: User email
                    type: string
                    example: user@email.com
                  role:
                    description: User role
                    type: string
                    example: client
                required:
                  - _id
                  - name
                  - email
                  - role
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags: 
        - Users
      description: Updates user information
      operationId: update
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: User ID
          in: path
          required: true
          schema:
            type: integer
            example: 60cca2f23c16d1184c6602e7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: User name
                  type: string
                  example: Client User
                email:
                  description: User email
                  type: string
                  example: user@email.com
                role:
                  description: User role
                  type: string
                  example: client
                password:
                  description: User password
                  type: string
                  example: "12345"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: User ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  name:
                    description: User name
                    type: string
                    example: Client User
                  email:
                    description: User email
                    type: string
                    example: user@email.com
                required:
                  - _id
                  - name
                  - email
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "409":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags: 
        - Users
      description: Deletes user
      operationId: delete
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: User ID
          in: path
          required: true
          schema:
            type: string
            example: 60cca2f23c16d1184c6602e7
      responses:
        "204":
          description: No Content
        "400":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/email/{email}:
    get:
      tags: 
        - Users
      description: Get all user information by email
      operationId: email
      parameters:
        - name: email
          description: User email
          in: path
          required: true
          schema:
            type: string
            example: user@email.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: User ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  name:
                    description: User name
                    type: string
                    example: Client User
                  email:
                    description: User email
                    type: string
                    example: user@email.com
                  role:
                    description: User role
                    type: string
                    example: client
                required:
                  - _id
                  - name
                  - email
                  - role
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products:
    post:
      tags: 
        - Products
      description: Creates a new product
      operationId: create
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: Product title
                  type: string
                  example: Awesome Book
                description:
                  description: Product email
                  type: string
                  example: A great book
                value:
                  description: Product role
                  type: string
                  example: "49.99"
                active:
                  description: Product status
                  type: boolean
                  example: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    description: Product ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  title:
                    description: Product title
                    type: string
                    example: Awesome Book
                  description:
                    description: Product email
                    type: string
                    example: A great book
                  value:
                    description: Product role
                    type: string
                    example: "49.99"
                required:
                  - _id
                  - title
                  - description
                  - value
        "400":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Response"
        "409":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    
    get:
      tags: 
        - Products
      description: Search products
      operationId: find
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: title
          description: Product Name
          in: query
          schema:
            type: string
            example: Client Product
        - name: tag
          description: Single word to search in product description
          in: query
          schema:
            type: string
            example: book
        - name: value
          description: Product value
          in: query
          schema:
            type: string
            example: "49.99"
        - name: minValue
          description: Minimum product value
          in: query
          schema:
            type: string
            example: "1.99"
        - name: maxValue
          description: Maximum product value
          in: query
          schema:
            type: string
            example: "100.00"
        - name: active
          description: Boolean to search active/inactive products
          in: query
          schema:
            type: boolean
            example: true
        - name: page
          description: Pagination page
          in: query
          schema:
            type: number
            example: 0
        - name: limit
          description: Pagination limit
          in: query
          schema:
            type: number
            example: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    description: Current page (0 index based)
                    type: number
                    example: 0
                  pages:
                    description: Number of pages
                    type: number
                    example: 1
                  limit:
                    description: Results per page
                    type: number
                    example: 10
                  total:
                    description: Results total
                    type: number
                    example: 2
                  items:
                    description: Products list
                    type: string
                    example: "{[{id: 60cca2f23c16d1184c6602e7, title: 'Awesome Book', description: 'A great book', value: '49.99', active: true, image: 'bookimagepath.jpg'}, {id: 1622928299858, title: 'Another Book', description: 'Another great book', value: '149.99', active: false, image: 'anotherbookimagepath.jpg'}]"
                required:
                  - page
                  - pages
                  - limit
                  - total
                  - items
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /products/{id}:
    get:
      tags: 
        - Products
      description: Shows product information
      operationId: findOne
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: Product ID
          in: path
          required: true
          schema:
            type: string
            example: 60cca2f23c16d1184c6602e7
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  title:
                    description: Product title
                    type: string
                    example: Awesome Book
                  description:
                    description: Product email
                    type: string
                    example: A great book
                  value:
                    description: Product role
                    type: string
                    example: "49.99"
                  active:
                    description: Product status
                    type: boolean
                    example: true
                required:
                  - id
                  - title
                  - description
                  - value
        "400":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags: 
        - Products
      description: Updates product information
      operationId: update
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: Product ID
          in: path
          required: true
          schema:
            type: string
            example: 60cca2f23c16d1184c6602e7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  id:
                    description: Product ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  title:
                    description: Product title
                    type: string
                    example: Awesome Book
                  description:
                    description: Product email
                    type: string
                    example: A great book
                  value:
                    description: Product role
                    type: string
                    example: "49.99"
                  active:
                    description: Product status
                    type: boolean
                    example: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product ID
                    type: string
                    example: 60cca2f23c16d1184c6602e7
                  title:
                    description: Product title
                    type: string
                    example: Awesome Book
                  description:
                    description: Product email
                    type: string
                    example: A great book
                  value:
                    description: Product role
                    type: string
                    example: "49.99"
                  active:
                    description: Product status
                    type: boolean
                    example: true
                required:
                  - id
                  - title
                  - description
                  - value
        "400":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/409Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags: 
        - Products
      description: Deletes product
      operationId: delete
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            $ref: "#/components/schemas/Authorization"
        - name: id
          description: Product ID
          in: path
          required: true
          schema:
            type: string
            example: 60cca2f23c16d1184c6602e7
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Response"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Response"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500Response"
                
        default:
          description: Some other error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    Authorization:
      type: object
      properties:
        Authorization:
          description: Access Token
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJydW5vQGVtYWlsLmNvbSIsInBhc3N3b3JkIjoiMTIzNDUiLCJpYXQiOjE2MjI5MjUyNzEsImV4cCI6MTYyMjkyNTU3MX0.0I5gFrVjyUjdgg_NkMwdwk6ZHux4n8JLqgia1CERrbM
    Login:
      type: object
      properties:
        email:
          description: User email
          type: string
          example: user@email.com
        password:
          description: User password
          type: string
          example: "12345"
      required:
        - email
        - password

    Register:
      type: object
      properties:
        name:
          description: User name
          type: string
          example: Client User
        email:
          description: User email
          type: string
          example: user@email.com
        password:
          description: User password
          type: string
          example: "12345"
      required:
        - name
        - email
        - password

    400Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Bad Request
      required:
        - error

    401Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Unauthorized
      required:
        - error

    403Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Forbidden
      required:
        - error

    404Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Not found
      required:
        - error

    409Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Conflict
      required:
        - error

    500Response:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Internal Server Error
      required:
        - error

    ErrorResponse:
      type: object
      properties:
        error:
          description: Error message
          type: string
          example: Error message
      required:
        - error